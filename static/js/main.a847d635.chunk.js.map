{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","imdbld","error","onChangeMovie","event","target","name","value","propValue","trim","length","setState","prevState","resetState","submitHandler","preventDefault","props","addMovie","onSubmit","this","htmlFor","type","onChange","placeholder","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a847d635.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    movie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbld: '',\n    },\n    error: {\n      title: false,\n      description: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbld: false,\n    },\n  };\n\n  onChangeMovie = (event) => {\n    const { name, value } = event.target;\n    const propValue = (value.trim().length === 0);\n\n    return this.setState(prevState => ({\n      movie: {\n        ...prevState.movie,\n        [name]: value,\n      },\n      error: {\n        ...prevState.error,\n        [name]: propValue,\n      },\n    }));\n  };\n\n  resetState = () => {\n    return this.setState(prevState => ({\n      movie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbld: '',\n      },\n      error: {\n        title: false,\n        description: false,\n        imgUrl: false,\n        imdbUrl: false,\n        imdbld: false,\n      },\n    }));\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n\n    if (this.state.movie.imdbld\n      && this.state.movie.imdbUrl\n      && this.state.movie.imgUrl\n      && this.state.movie.description\n      && this.state.movie.title\n    ) {\n      this.props.addMovie(this.state.movie);\n\n      this.resetState();\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"film__form\" onSubmit={this.submitHandler}>\n        <label htmlFor=\"\">\n          Title\n          <input\n            type=\"text\"\n            className=\"film__input\"\n            value={this.state.movie.title}\n            name=\"title\"\n            onChange={this.onChangeMovie}\n            placeholder=\"Enter title\"\n          />\n        </label>\n        {this.state.error.title && (\n          <div className=\"film__error\">Please, enter title text</div>\n        )}\n        <label htmlFor=\"\">\n          Description\n          <input\n            type=\"text\"\n            className=\"film__input\"\n            value={this.state.movie.description}\n            name=\"description\"\n            onChange={this.onChangeMovie}\n            placeholder=\"Enter description\"\n          />\n        </label>\n        {this.state.error.description && (\n          <div className=\"film__error\">Please, enter description text</div>\n        )}\n        <label htmlFor=\"\">\n          ImgUrl\n          <input\n            type=\"text\"\n            className=\"film__input\"\n            value={this.state.movie.imgUrl}\n            name=\"imgUrl\"\n            onChange={this.onChangeMovie}\n            placeholder=\"Enter imgUrl\"\n          />\n        </label>\n        {this.state.error.imgUrl && (\n          <div className=\"film__error\">Please, enter imgUrl text</div>\n        )}\n        <label htmlFor=\"\">\n          ImdbUrl\n          <input\n            type=\"text\"\n            className=\"film__input\"\n            value={this.state.movie.imdbUrl}\n            name=\"imdbUrl\"\n            onChange={this.onChangeMovie}\n            placeholder=\"Enter imdbUrl\"\n          />\n        </label>\n        {this.state.error.imdbUrl && (\n          <div className=\"film__error\">Please, enter imdUrl text</div>\n        )}\n        <label htmlFor=\"\">\n          imdbld\n          <input\n            type=\"text\"\n            className=\"film__input\"\n            value={this.state.movie.imdbld}\n            name=\"imdbld\"\n            onChange={this.onChangeMovie}\n            placeholder=\"Enter imdbld\"\n          />\n        </label>\n        {this.state.error.imdbld && (\n          <div className=\"film__error\">Please, enter imdbld title text</div>\n        )}\n        <button type=\"submit\">Save card</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies,\n        {\n          ...movie,\n        },\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}