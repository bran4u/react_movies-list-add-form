{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","newTitle","titleError","newDescription","descriptionError","newImgUrl","imgUrlError","newImdbUrl","imdbUrlError","newImdbld","imdbldErorr","handleChangeTitle","value","target","setState","prevState","handleChangeDescription","handleChangeImgUrl","handleChangeImdbUrl","handleChangeImdbld","submitHandler","event","preventDefault","props","addMovie","imdUrl","imdbld","onSubmit","this","htmlFor","type","onChange","placeholder","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aaa625e0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    newTitle: '',\n    titleError: false,\n    newDescription: '',\n    descriptionError: false,\n    newImgUrl: '',\n    imgUrlError: false,\n    newImdbUrl: '',\n    imdbUrlError: false,\n    newImdbld: '',\n    imdbldErorr: false,\n  };\n\n  handleChangeTitle = ({ target: { value } }) => {\n    this.setState(prevState => ({\n      newTitle: value,\n      titleError: false,\n    }));\n  };\n\n  handleChangeDescription = ({ target: { value } }) => {\n    this.setState(prevState => ({\n      newDescription: value,\n      descriptionError: false,\n    }));\n  };\n\n  handleChangeImgUrl = ({ target: { value } }) => {\n    this.setState(prevState => ({\n      newImgUrl: value,\n      imgUrlError: false,\n    }));\n  };\n\n  handleChangeImdbUrl = ({ target: { value } }) => {\n    this.setState(prevState => ({\n      newImdbUrl: value,\n      imdbUrlError: false,\n    }));\n  };\n\n  handleChangeImdbld = ({ target: { value } }) => {\n    this.setState(prevState => ({\n      newImdbld: value,\n      titleError: false,\n    }));\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n\n    if (!this.state.newTitle) {\n      this.setState(prevState => ({ titleError: true }));\n    }\n\n    if (!this.state.newDescription) {\n      this.setState(prevState => ({ descriptionError: true }));\n    }\n\n    if (!this.state.newImgUrl) {\n      this.setState(prevState => ({ imgUrlError: true }));\n    }\n\n    if (!this.state.newImdbUrl) {\n      this.setState(prevState => ({ imdbUrlError: true }));\n    }\n\n    if (!this.state.newImdbld) {\n      this.setState(prevState => ({ imdbldErorr: true }));\n    }\n\n    if (this.state.newImdbld\n      && this.state.newImdbUrl\n      && this.state.newImgUrl\n      && this.state.newDescription\n      && this.state.newTitle\n    ) {\n      this.props.addMovie({\n        title: this.state.newTitle,\n        description: this.state.newDescription,\n        imgUrl: this.state.newImgUrl,\n        imdbUrl: this.state.imdUrl,\n        imdbld: this.state.newImdbld,\n      });\n\n      this.setState(prevState => ({\n        newTitle: '',\n        titleError: false,\n        newDescription: '',\n        descriptionError: false,\n        newImgUrl: '',\n        imgUrlError: false,\n        newImdbUrl: '',\n        imdbUrlError: false,\n        newImdbld: '',\n        imdbldErorr: false,\n      }));\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"film__form\" onSubmit={this.submitHandler}>\n        <label htmlFor=\"\">\n          Title\n          <input\n            type=\"text\"\n            className=\"film__input\"\n            value={this.state.newTitle}\n            onChange={this.handleChangeTitle}\n            placeholder=\"Enter title\"\n          />\n        </label>\n        {this.state.titleError && (\n          <div className=\"film__error\">Please, enter title text</div>\n        )}\n        <label htmlFor=\"\">\n          Description\n          <input\n            type=\"text\"\n            className=\"film__input\"\n            value={this.state.newDescription}\n            onChange={this.handleChangeDescription}\n            placeholder=\"Enter description\"\n          />\n        </label>\n        {this.state.descriptionError && (\n          <div className=\"film__error\">Please, enter description text</div>\n        )}\n        <label htmlFor=\"\">\n          ImgUrl\n          <input\n            type=\"text\"\n            className=\"film__input\"\n            value={this.state.newImgUrl}\n            onChange={this.handleChangeImgUrl}\n            placeholder=\"Enter imgUrl\"\n          />\n        </label>\n        {this.state.imgUrlError && (\n          <div className=\"film__error\">Please, enter imgUrl text</div>\n        )}\n        <label htmlFor=\"\">\n          ImdbUrl\n          <input\n            type=\"text\"\n            className=\"film__input\"\n            value={this.state.newImdbUrl}\n            onChange={this.handleChangeImdbUrl}\n            placeholder=\"Enter imdbUrl\"\n          />\n        </label>\n        {this.state.imdbUrlError && (\n          <div className=\"film__error\">Please, enter imdUrl text</div>\n        )}\n        <label htmlFor=\"\">\n          imdbld\n          <input\n            type=\"text\"\n            className=\"film__input\"\n            value={this.state.newImdbld}\n            onChange={this.handleChangeImdbld}\n            placeholder=\"Enter imdbld\"\n          />\n        </label>\n        {this.state.imdbldErorr && (\n          <div className=\"film__error\">Please, enter imdbld title text</div>\n        )}\n        <button type=\"submit\">Save card</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies,\n        {\n          ...movie,\n        },\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}